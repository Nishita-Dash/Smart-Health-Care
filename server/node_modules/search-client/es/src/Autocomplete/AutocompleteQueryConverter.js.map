{"version":3,"file":"AutocompleteQueryConverter.js","sourceRoot":"","sources":["../../../src/Autocomplete/AutocompleteQueryConverter.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,kBAAkB,EAAS,MAAM,WAAW,CAAC;AAEtD;;GAEG;AACH;IAAgD,8CAAkB;IAAlE;;IAcA,CAAC;IAbG;;OAEG;IACO,iDAAY,GAAtB,UAAuB,KAAY;QAC/B,IAAI,MAAM,GAAa,EAAE,CAAC;QAE1B,4CAA4C;QAC5C,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,0GAA0G;QAC9I,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC;QAEtD,OAAO,MAAM,CAAC;IAClB,CAAC;IACL,iCAAC;AAAD,CAAC,AAdD,CAAgD,kBAAkB,GAcjE","sourcesContent":["import { BaseQueryConverter, Query } from \"../Common\";\r\n\r\n/**\r\n * Class to handle creating autocomplete lookups.\r\n */\r\nexport class AutocompleteQueryConverter extends BaseQueryConverter {\r\n    /**\r\n     * Converts the query params to an array of key=value segments.\r\n     */\r\n    protected getUrlParams(query: Query): string[] {\r\n        let params: string[] = [];\r\n\r\n        // TODO: Add clientId also for autocomplete?\r\n        this.addParamIfSet(params, \"l\", 1); // Forces this to always do server-side when called. The client will skip calling when not needed instead.\r\n        this.addParamIfSet(params, \"q\", query.queryText);\r\n        this.addParamIfSet(params, \"s\", query.maxSuggestions);\r\n\r\n        return params;\r\n    }\r\n}\r\n"]}