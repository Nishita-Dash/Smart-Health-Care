{"version":3,"file":"FindQueryConverter.js","sourceRoot":"","sources":["../../../src/Find/FindQueryConverter.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,kBAAkB,EAAS,MAAM,WAAW,CAAC;AAEtD;;GAEG;AACH;IAAwC,sCAAkB;IAA1D;;IA0BA,CAAC;IAzBG;;OAEG;IACO,yCAAY,GAAtB,UAAuB,KAAY;QAC/B,IAAI,MAAM,GAAa,EAAE,CAAC;QAE1B,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QAChE,IAAI,OAAO,GAAa,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC;YACvC,OAAA,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;QAAjC,CAAiC,CACpC,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC;QACtD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;QACrD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QACpD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;QACrD,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC7D,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAExE,OAAO,MAAM,CAAC;IAClB,CAAC;IACL,yBAAC;AAAD,CAAC,AA1BD,CAAwC,kBAAkB,GA0BzD","sourcesContent":["import { BaseQueryConverter, Query } from \"../Common\";\r\n\r\n/**\r\n * Class to handle creating find lookups.\r\n */\r\nexport class FindQueryConverter extends BaseQueryConverter {\r\n    /**\r\n     * Converts the query params to an array of key=value segments.\r\n     */\r\n    protected getUrlParams(query: Query): string[] {\r\n        let params: string[] = [];\r\n\r\n        this.addParamIfSet(params, \"c\", query.clientId);\r\n        this.addParamIfSet(params, \"df\", this.createDate(query.dateFrom));\r\n        this.addParamIfSet(params, \"dt\", this.createDate(query.dateTo));\r\n        let filters: string[] = query.filters.map(f =>\r\n            f.category.categoryName.join(\"|\")\r\n        );\r\n        this.addParamIfSet(params, \"f\", filters.join(\";\"));\r\n        this.addParamIfSet(params, \"q\", query.queryText);\r\n        this.addParamIfSet(params, \"t\", query.searchType);\r\n        this.addParamIfSet(params, \"l\", query.uiLanguageCode);\r\n        this.addParamIfSet(params, \"g\", query.matchGrouping);\r\n        this.addParamIfSet(params, \"o\", query.matchOrderBy);\r\n        this.addParamIfSet(params, \"p\", query.matchPage);\r\n        this.addParamIfSet(params, \"s\", query.matchPageSize);\r\n        this.addParamIfSet(params, \"gc\", query.matchGenerateContent);\r\n        this.addParamIfSet(params, \"gch\", query.matchGenerateContentHighlights);\r\n\r\n        return params;\r\n    }\r\n}\r\n"]}